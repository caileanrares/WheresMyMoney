
@model WheresMyMoney.ViewModels.CreateMovementViewModel
@{
    ViewBag.Title = "EditMovement";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>EditMovement</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>MovementModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })



    <div class="form-group">
        @Html.LabelFor(model => model.Movement.MovementId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Movement.MovementId, new { htmlAttributes = new { @class = "form-control", @readonly="true" } })
            @Html.ValidationMessageFor(model => model.Movement.Date, "", new { @class = "text-danger" })
        </div>
    </div>







    <div class="form-group">
        @Html.LabelFor(model => model.Movement.Date, htmlAttributes: new { @class = "control-label col-md-2 " })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Movement.Date, new { htmlAttributes = new { @class = "datepicker searchField widthCreate" } })
            @Html.ValidationMessageFor(model => model.Movement.Date, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Movement.VALUE, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Movement.VALUE, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Movement.VALUE, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Movement.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Movement.UserId, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
            @Html.ValidationMessageFor(model => model.Movement.UserId, "", new { @class = "text-danger" })
        </div>
    </div>










    <div class="form-group">
        @Html.LabelFor(model => model.Movement.MovementTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            
            @*@Html.DropDownListFor(model => model.Movement.MovementTypeId, new SelectList(Model.MovementType, "MovementTypeId", "Name"), "Select movement Type", new { htmlAttributes = new { @class = "form-select form-select-lg mb-3" }, @readonly = "true" })*@
            
            @Html.EditorFor(model => model.Movement.MovementTypeId, new { htmlAttributes = new { @class = "form-control", @readonly="true"} })
            @Html.ValidationMessageFor(model => model.Movement.MovementTypeId, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Movement.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Movement.CategoryId, new SelectList(Model.Category, "CategoryId", "Name"), "Select Category", new { @class = "form-control"  })
            @Html.ValidationMessageFor(model => model.Movement.CategoryId, "", new { @class = "text-danger" })
        </div>
    </div>








    <div class="form-group">
        @Html.LabelFor(model => model.Movement.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Movement.Notes, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Movement.Notes, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default btn-lg" })
</div>





<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />


@section scripts {

    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>

    <script>
        $(function () {
            $(".datepicker").datepicker({
                changeMonth: true,
                changeYear: true,
                yearRange: "-2:+5",
               
            });
           
        })
    </script>
}



































@*@model WheresMyMoney.Models.MovementModel

    @{
        ViewBag.Title = "EditMovement";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }

    <h2>EditMovement</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>MovementModel</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.MovementId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MovementId, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    @Html.ValidationMessageFor(model => model.MovementId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.VALUE, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.VALUE, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.VALUE, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CategoryId, new { htmlAttributes = new { @class = "form-control", } })
                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MovementTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MovementTypeId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MovementTypeId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@
